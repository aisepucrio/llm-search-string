{
    "gemma3:12b": [
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product line\" OR SPL) AND (\"non-functional properties\" OR performance OR footprint OR energy) AND (optimization OR measurement) AND (\"variant derivation\" OR \"feature-oriented programming\")",
            "execution_time": 29.79
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR SPL) AND (\"non-functional properties\" OR \"quality attributes\" OR performance OR size OR \"binary size\") AND (\"software configuration\" OR \"product derivation\") AND (measurement OR \"attribute evaluation\")",
            "execution_time": 13.8
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect prediction\" OR \"defect prediction\") AND (\"machine learning\" OR \"data mining\" OR \"classification\") AND (\"source code\" OR \"code metrics\")",
            "execution_time": 9.96
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"data mining\") AND (\"product line\" OR \"product lines\" OR \"configuration space\") AND (\"constraint inference\" OR \"constraint discovery\" OR \"constraint generation\") AND (\"product configuration\" OR \"software configuration\")",
            "execution_time": 15.6
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"performance prediction\" OR \"performance modeling\") AND (\"configurable systems\" OR \"variant selection\") AND (\"sampling strategies\" OR \"sampling methods\" OR \"sampling techniques\") AND (\"feature selection\" OR \"variant generation\")",
            "execution_time": 12.43
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product line\" OR SPL) AND (\"non-functional properties\" OR performance OR footprint OR energy) AND (optimization OR \"variant derivation\")",
            "execution_time": 11.62
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR SPL) AND (\"non-functional properties\" OR \"quality attributes\") AND (\"software modules\" OR \"code units\") AND (\"measurement\" OR \"optimization\" OR \"configuration\")",
            "execution_time": 11.84
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"machine learning\" OR \"data mining\") AND (\"software defect\" OR \"software fault\" OR \"bug prediction\")\n",
            "execution_time": 7.64
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"data mining\") AND (\"product line\" OR \"product-line\") AND (\"constraint inference\" OR \"cross-tree constraints\")",
            "execution_time": 9.59
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"configurable systems\" OR \"system variants\") AND (\"performance prediction\" OR \"performance evaluation\") AND (\"sampling strategies\" OR \"sampling methods\" OR \"sample selection\") AND (\"feature selection\" OR \"feature coverage\")",
            "execution_time": 13.42
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product line\" OR SPL) AND (\"non-functional properties\" OR \"quality attributes\" OR performance OR footprint OR energy) AND (optimization OR \"variant derivation\") AND (\"feature-oriented programming\" OR \"conditional compilation\")",
            "execution_time": 14.87
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR SPL) AND (\"non-functional properties\" OR \"quality attributes\" OR performance OR security OR reliability OR usability) AND (\"product derivation\" OR configuration) AND (measurement OR \"attribute-driven design\")",
            "execution_time": 12.73
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect prediction\" OR \"defect prediction\") AND (\"machine learning\" OR PNN OR CART OR \"J48 algorithm\" OR GMDH) AND (\"source code\" OR \"code metrics\")",
            "execution_time": 12.26
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"data mining\" OR \"artificial intelligence\") AND (\"product line\" OR \"product lines\" OR \"software product line\" OR \"SPL\") AND (\"constraint inference\" OR \"constraint generation\" OR \"constraint discovery\" OR \"cross-tree constraints\")",
            "execution_time": 15.13
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"configurable systems\" OR \"variant generation\") AND (\"performance prediction\" OR \"performance modeling\" OR \"performance estimation\") AND (\"sampling strategies\" OR \"sampling methods\" OR \"sample selection\") AND (\"feature selection\" OR \"feature frequency\" OR \"t-way feature coverage\")",
            "execution_time": 16.1
        }
    ],
    "mistral-nemo:latest": [
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional properties\" OR \"NFPs\") AND optimization AND measurement",
            "execution_time": 16.85
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional property\" OR \"functional property\") AND (\"product derivation\" OR \"configuration process\") AND (measure* OR optimize*)",
            "execution_time": 5.33
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect\" OR \"defect prediction\") AND (machine learning)",
            "execution_time": 2.75
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"ML\") AND (\"product lines\" OR \"product line constraints\") AND (infer OR derive)",
            "execution_time": 3.89
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"configurable systems\" OR \"individual system variants\") AND (\"performance prediction\" OR \"sampling strategies\") AND (\"cost-efficient\" OR \"measurement effort\")",
            "execution_time": 4.92
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "software product line AND (\"non-functional property\" OR \"performance\" OR \"footprint\" OR \"energy\") AND optimization AND (SPL OR variant)",
            "execution_time": 5.89
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional property\" OR \"quality attribute\") AND (measure OR evaluate) AND (\"software module\" OR \"code unit\")",
            "execution_time": 5.34
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect\" OR \"defect prediction\") AND (\"machine learning\" OR ML) AND (PNN OR CART OR \"decision tree\" OR rule-based)",
            "execution_time": 5.01
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"product line\" OR \"software product lines\") AND (\"machine learning\" OR \"ML\") AND constraints AND oracle",
            "execution_time": 3.73
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"configurable system\" OR \"software product line\") AND (\"performance prediction\" OR \"predict performance\") AND (sampling OR measure)",
            "execution_time": 4.14
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional properties\" OR \"qualitative specification\" OR \"quantitative measurement\") AND (optimization OR variant space)",
            "execution_time": 6.19
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional properties\" OR \"quality attributes\") AND (\"feature composition\" OR \"product derivation\") AND (measurement OR optimization)",
            "execution_time": 5.37
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect\" OR \"defect prediction\") AND (\"machine learning\" OR \"ML\") AND (PNN OR CART OR J48)",
            "execution_time": 4.7
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"ML\") AND (\"product line\" OR \"productlines\") AND constraints AND (infer OR learn) AND (correct OR valid) AND video generator",
            "execution_time": 5.14
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"configurable systems\" OR \"system variants\") AND (\"performance prediction\" OR \"sampling strategies\") AND (measurement effort OR accuracy)",
            "execution_time": 4.41
        }
    ],
    "llama3.1:latest": [
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional property\" OR \"performance optimization\" OR \"energy efficiency\") AND (\"variant derivation\" OR \"optimization algorithm\")",
            "execution_time": 8.54
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product line\" OR \"SPL\") AND (\"non-functional property\" OR \"performance metric\" OR \"quality attribute\") AND (\"configuration process\" OR \"product derivation\")",
            "execution_time": 2.39
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"machine learning\" OR \"artificial intelligence\") AND (\"software defect prediction\" OR \"defect prediction\") AND (\"source code analysis\" OR \"algorithmic approach\")",
            "execution_time": 2.4
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"constraint inference\") AND (\"product lines\" OR \"variability intensive systems\") AND (oracle OR validation)",
            "execution_time": 1.97
        },
        {
            "prompt_name": "prompt0",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, academic search string to retrieve relevant articles on the same topic. \n    One suggested approach is to take the keywords from the provided article and augment them with related words.\n    I want just and only a search string. Don't give me any additional information.\n    An exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"performance prediction\" OR \"configurable systems\") AND (\"sampling strategies\" OR \"sampling methods\") AND (\"software performance\" OR \"system variants\")",
            "execution_time": 2.05
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"Software product line\" OR \"SPL\") AND (\"non-functional properties\" OR \"optimization goals\") AND (variant OR \"program derivation\")",
            "execution_time": 2.47
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"non-functional properties\" OR \"software metrics\") AND (\"product derivation\" OR \"software product lines\") AND (configuration OR \"complexity management\")",
            "execution_time": 2.08
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect\" OR \"predictive maintenance\") AND (\"machine learning\" OR \"classification algorithms\") AND (\"source code analysis\" OR \"software metrics\")",
            "execution_time": 2.19
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(\"machine learning\" OR \"constraint inference\") AND (\"product lines\" OR \"variability intensive systems\") AND (\"constraints\" OR \"cross-tree constraints\")",
            "execution_time": 2.24
        },
        {
            "prompt_name": "prompt1",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nTo do this, you can follow these steps:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nThe final answer is the search string based on the reasoning. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected format output: : (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(\"configurable systems\" OR \"system variants\") AND (\"performance prediction\" OR \"sampling strategies\") AND (\"prediction accuracy\" OR \"measurement effort\")",
            "execution_time": 2.17
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: SPL Conqueror: Toward optimization of non-functional properties in software product lines\n\n        abstract: A software product line (SPL) is a family of related programs of a domain. The programs of an SPL are distinguished in terms of features, which are end-user visible characteristics of programs. Based on a selection of features, stakeholders can derive tailor-made programs that satisfy functional requirements. Besides functional requirements, different application scenarios raise the need for optimizing non-functional properties of a variant. The diversity of application scenarios leads to heterogeneous optimization goals with respect to non-functional properties (e. g., performance vs. footprint vs. energy optimized variants). Hence, an SPL has to satisfy different and sometimes contradicting requirements regarding non-functional properties. Usually, the actually required non-functional properties are not known before product derivation and can vary for each application scenario and customer. Allowing stakeholders to derive optimized variants requires us to measure non-functional properties after the SPL is developed. Unfortunately, the high variability provided by SPLs complicates measurement and optimization of non-functional properties due to a large variant space. With SPL Conqueror, we provide a holistic approach to optimize non-functional properties in SPL engineering. We show how non-functional properties can be qualitatively specified and quantitatively measured in the context of SPLs. Furthermore, we discuss the variant-derivation process in SPL Conqueror that reduces the effort of computing an optimal variant. We demonstrate the applicability of our approach by means of nine case studies of a broad range of application domains (e. g., database management and operating systems). Moreover, we show that SPL Conqueror is implementation and language independent by using SPLs that are implemented with different mechanisms, such as conditional compilation and feature-oriented programming. \n    ",
            "answer": "(\"software product lines\" OR \"SPL engineering\") AND (\"non-functional properties\" OR \"optimization goals\") AND (\"variant-derivation process\" OR \"feature-oriented programming\" OR \"conditional compilation\")\n\nAfter searching with the extracted terms, the following new list of keywords is generated to expand the search string:\n\n* To capture more relevant articles on optimization of non-functional properties in SPLs:\n\t+ Optimization techniques (e.g., genetic algorithms, simulated annealing)\n\t+ Performance metrics (e.g., response time, throughput)\n\t+ Energy efficiency\n\t+ Footprint reduction\n\t+ Variability management\n* To focus on the application domains mentioned in the abstract:\n\t+ Database management systems\n\t+ Operating systems\n\nThe second version of the search string is:\n\n(\"software product lines\" OR \"SPL engineering\") AND (\"non-functional properties\" OR \"optimization goals\") AND ((genetic algorithms OR simulated annealing) OR (performance metrics OR response time OR throughput) OR energy efficiency OR footprint reduction OR variability management OR database management systems OR operating systems)\n\nFinal search string:\n \n(\"software product lines\" OR \"SPL engineering\") AND (\"non-functional properties\" OR \"optimization goals\") AND ((genetic algorithms OR simulated annealing) OR (performance metrics OR response time OR throughput) OR energy efficiency OR footprint reduction OR variability management OR database management OR operating system)",
            "execution_time": 17.29
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Measuring non-functional properties in software product lines for product derivation\n\n        abstract: A software product line (SPL) enables stakeholders to derive different software products for a domain while providing a high degree of reuse of their code units. Software products are derived in a configuration process by composing different code units. The configuration process becomes complex if SPLs contain hundreds of features. In many cases, a stakeholder is not only interested in functional but also in non-functional properties of a desired product. Because SPLs can be used in different application scenarios alternative implementations of already existing functionality are developed to meet special non-functional requirements, like restricted binary size and performance guarantees. To enable these complex configurations we discuss and present techniques to measure non-functional properties of software modules and use these values to compute SPL configurations optimized to the users needs.\n    ",
            "answer": "(\"software product lines\" OR \"SPL\") AND (\"non-functional properties\" OR \"performance measures\" OR \"binary size constraints\") AND (\"configuration process\" OR \"product derivation\")",
            "execution_time": 2.49
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Machine learning techniques to predict software defect\n\n        abstract: The past 10 years have seen the prediction of software defects proposed by many researchers using various metrics based on measurable aspects of source code entities (e.g. methods, classes, files or modules) and the social structure of software project in an effort to predict the software defects. However, these metrics could not predict very high accuracies in terms of sensitivity, specificity and accuracy. In this chapter, we propose the use of machine learning techniques to predict software defects. The effectiveness of all these techniques is demonstrated on ten datasets taken from literature. Based on an experiment, it is observed that PNN outperformed all other techniques in terms of accuracy and sensitivity in all the software defects datasets followed by CART and Group Method of data handling. We also performed feature selection by t-statistics based approach for selecting feature subsets across different folds for a given technique and followed by the feature subset selection. By taking the most important variables, we invoked the classifiers again and observed that PNN outperformed other classifiers in terms of sensitivity and accuracy. Moreover, the set of 'if- then rules yielded by J48 and CART can be used as an expert system for prediction of software defects. \n    ",
            "answer": "(\"software defect\" OR \"software errors\") AND (\"machine learning\" OR \"predictive model\") AND (\"source code analysis\" OR \"code metrics\" OR \"feature selection\")",
            "execution_time": 2.58
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Using machine learning to infer constraints for product lines\n\n        abstract: Variability intensive systems may include several thousand features allowing for an enormous number of possible configurations, including wrong ones (e.g. the derived product does not compile). For years, engineers have been using constraints to a priori restrict the space of possible configurations, i.e. to exclude configurations that would violate these constraints. The challenge is to find the set of constraints that would be both precise (allow all correct configurations) and complete (never allow a wrong configuration with respect to some oracle). In this paper, we propose the use of a machine learning approach to infer such product-line constraints from an oracle that is able to assess whether a given product is correct. We propose to randomly generate products from the product line, keeping for each of them its resolution model. Then we classify these products according to the oracle, and use their resolution models to infer cross-tree constraints over the product-line. We validate our approach on a product-line video generator, using a simple computer vision algorithm as an oracle. We show that an interesting set of cross-tree constraint can be generated, with reasonable precision and recall.\n    ",
            "answer": "(product line OR product lines) AND (constraints OR constraint inference) AND (machine learning OR variabilty intensive systems)\n\n(\"product line\" OR \"product lines\") AND (\"constraint inference\" OR constraints) AND (\"machine learning\" OR \"variability intensive system\")",
            "execution_time": 3.54
        },
        {
            "prompt_name": "prompt2",
            "prompt_content": "You will receive the title and abstract of a scientific article. Your goal is to generate one, and just and only one, search string to retrieve relevant articles on the same topic. Don't give me any  additional information.\nThe approach suggestion:\nUse the provided title and abstract of the article to identify the most important terms.\nIdentify words that are closely related to the central theme of the text, considering bigrams and trigrams, to select the most relevant expressions.\nGroup the keywords into clusters using a semantic proximity criterion.\nEnsure that the clusters contain coherently related terms, where each cluster should represent a specific topic.\nConnect the terms within each cluster using OR.\nConnect the clusters with each other using AND.\nWith that, you will have the search string. Now the approach suggestion for improve that one search string.\nImagine that the extracted terms were used to search for relevant articles and you take 10 of then. \nGenerate a new list of keywords based on how the terms could be expanded to capture more relevant articles.\nBuild a second version of the search string, expanded with suggested terms.\nPresent the final search string result. I want just and only the search string. Don't give me any additional information.\nAn exemple of expected output format: (\"nutritional intervention\" OR \"dietary intervention\") AND (\"type 2 diabetes\" OR \"T2DM\") AND (randomized OR \"clinical trial\")\n    ",
            "article": "title: Cost-efficient sampling for performance prediction of configurable systems\n\n        abstract: A key challenge of the development and maintenanceof configurable systems is to predict the performance ofindividual system variants based on the features selected. It isusually infeasible to measure the performance of all possible variants, due to feature combinatorics. Previous approaches predictperformance based on small samples of measured variants, butit is still open how to dynamically determine an ideal samplethat balances prediction accuracy and measurement effort. Inthis paper, we adapt two widely-used sampling strategies forperformance prediction to the domain of configurable systemsand evaluate them in terms of sampling cost, which considersprediction accuracy and measurement effort simultaneously. Togenerate an initial sample, we introduce a new heuristic based onfeature frequencies and compare it to a traditional method basedon t-way feature coverage. We conduct experiments on six realworldsystems and provide guidelines for stakeholders to predictperformance by sampling.\n    ",
            "answer": "(configurable systems OR performance prediction) AND (sampling strategies OR \"small samples\") AND (prediction accuracy OR measurement effort)",
            "execution_time": 1.73
        }
    ]
}